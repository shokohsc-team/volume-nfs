name: Buildx and push docker image

on:
  schedule:
    - cron: '0 1 * * *' # everyday at 1am
  pull_request:
    branches: main
  push:
    branches: main
    tags:
      - v*

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker Buildx (build)
        run: |
          export IMAGE_TAG=$(if [ 'refs/heads/main' = "${IMAGE_TAG}" ]; then echo "latest"; else echo "$IMAGE_TAG" | sed 's/refs\/\(heads\|tags\)\///g'; fi) && \
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --output "type=image,push=false" \
            --tag "${IMAGE_NAME}:${IMAGE_TAG}" \
            --file ./Dockerfile ./
        env:
          IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: ${{ github.ref }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        run: |
          export IMAGE_TAG=$(if [ 'refs/heads/main' = "${IMAGE_TAG}" ]; then echo "latest"; else echo "$IMAGE_TAG" | sed 's/refs\/\(heads\|tags\)\///g'; fi) && \
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --output "type=image,push=true" \
            --tag "${IMAGE_NAME}:${IMAGE_TAG}" \
            --file ./Dockerfile ./
        env:
          IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: ${{ github.ref }}

      - name: Inspect image
        run: |
          export IMAGE_TAG=$(if [ 'refs/heads/main' = "${IMAGE_TAG}" ]; then echo "latest"; else echo "$IMAGE_TAG" | sed 's/refs\/\(heads\|tags\)\///g'; fi) && \
          docker buildx imagetools inspect "${IMAGE_NAME}:${IMAGE_TAG}"
        env:
          IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: ${{ github.ref }}
